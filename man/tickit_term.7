.TH TICKIT_TERM 7
.SH NAME
TickitTerm \- abstraction of an interactive terminal
.SH SYNOPSIS
.nf
.B #include <tickit.h>
.sp
.BI "typedef struct " TickitTerm ;
.fi
.sp
.SH DESCRIPTION
A \fBTickitTerm\fP instance represents an interactive user terminal. It provides functions to draw content to the terminal, and to accept input and other events from it. It supports a variety of modes of operation; allowing both synchronous and asynchronous filehandle IO, and working abstractly via byte buffers.
.SH FUNCTIONS
A new \fBTickitTerm\fP instance is created using the \fBtickit_term_new\fP(3) or \fBtickit_term_new_for_termtype\fP(3) functions, and destroyed using \fBtickit_term_destroy\fP(3).
.PP
A terminal instance will need either an output function or an output filehandle set before it can send output. This can be performed by either \fBtickit_term_set_output_func\fP(3) or \fBtickit_term_set_output_fd\fP(3). An output buffer can be defined by \fBtickit_term_set_output_buffer\fP(3). An input filehandle can be set using \fBtickit_term_set_input_fd\fP(3), or input can be sent from a byte buffer using \fBtickit_term_input_push_bytes\fP(3). It supports
.SM UTF-8
if enabled; either by detection of a
.SM UTF-8
locale, explicitly by calling \fBtickit_term_set_utf8\fP(3).
.PP
The size of the terminal can be queried using \fBtickit_term_get_size\fP(3), or forced to a given size by \fBtickit_term_set_size\fP(3). If the application is aware that the size of a terminal represented by a \fBtty\fP(7) filehandle has changed (for example due to receipt of a \fBSIGWINCH\fP signal), it can call \fBtickit_term_refresh_size\fP(3) to update it.
.SH OUTPUT
Once an output method is defined, a terminal instance can be used for outputting drawing and other commands. For drawing, the functions \fBtickit_term_print\fP(3), \fBtickit_term_goto\fP(3), \fBtickit_term_move\fP(3), \fBtickit_term_scrollrect\fP(3), \fBtickit_term_chpen\fP(3), \fBtickit_term_setpen\fP(3), \fBtickit_term_clear\fP(3) and \fBtickit_term_erasech\fP(3) can be used. Additionally for setting modes, the functions \fBtickit_term_set_mode_altscreen\fP(3), \fBtickit_term_set_mode_cursorvis\fP(3) and \fBtickit_term_set_mode_mouse\fP(3) can be used. If an output buffer is defined it will need to be flushed when drawing is complete by calling \fBtickit_term_flush\fP(3).
.SH INPUT
Input via a filehandle can be received either synchronously by calling \fBtickit_term_input_wait\fP(3), or asynchronously by calling \fBtickit_term_input_readable\fP(3) and \fBtickit_term_input_check_timeout\fP(3). Any of these functions may cause one or more events to be raised by invoking event handler functions.
.SH EVENTS
A terminal instance stores a set of event handlers. Each event handler consists of a bitmask of one or more event types it is interested in, a function pointer, and an arbitrary pointer containing user data. Event handlers may be installed using \fBtickit_term_bind_event\fP(3) and removed using \fBtickit_term_unbind_event_id\fP(3).
.PP
The event types recognised are:
.TP
.B TICKIT_EV_RESIZE
The terminal has been resized. The \fIargs\fP structure gives the new size of the terminal in the \fIlines\fP and \fIcols\fP fields.
.TP
.B TICKIT_EV_KEY
A key has been pressed on the keyboard. The \fIargs\fP structure gives details of the key event with \fItype\fP taking the value \fBTICKIT_KEYEV_KEY\fP for symbolic or function keys, or \fBTICKIT_KEYEV_TEXT\fP for regular Unicode characters. \fIstr\fB will contain the name of the special key, including any applied modifiers, or a
.SM UTF-8
string of the Unicode character.
.TP
.B TICKIT_EV_MOUSE
A mouse button has been pressed or released, the mouse cursor moved while dragging a button, or the wheel has been scrolled. The \fIargs\fP structure gives details, with \fItype\fP taking one of the values \fBTICKIT_MOUSEEV_PRESS\fP, \fBTICKIT_MOUSEEV_DRAG\fP, \fBTICKIT_MOUSEEV_RELEASE\fP or \fBTICKIT_MOUSEEV_WHEEL\fP. \fIbutton\fP gives the button index for button events, or one of \fBTICKIT_MOUSEWHEEL_UP\fP or \fBTICKIT_MOUSEWHEEL_DOWN\fP for wheel events. \fIline\fP and \fIcol\fP give the position of the mouse cursor for this event.
